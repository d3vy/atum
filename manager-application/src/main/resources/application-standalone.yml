server:
  port: 8081

logging:
  level:
    sql: info
    org.springframework.security: debug

spring:

  application:
    name: manager-application

  boot:
    admin:
      client:
        enabled: true
        instance:
          name: manager-application
          service-host-type: ip
        url: http://localhost:8085


  security:
    oauth2:
      client:
        provider:
          keycloak:
            issuerUri: http://localhost:8082/realms/atum
            userNameAttribute: preferred_username
        registration:
          keycloak:
            clientId: manager-application
            clientSecret: ${MANAGER_APPLICATION_CLIENT_SECRET}
            scope:
              - openid
              - microprofile-jwt
              - view_catalogue
              - edit_catalogue
          metrics:
            provider: keycloak
            authorizationGrantType: client_credentials
            clientId: manager-application-metrics-client
            clientSecret: ${MANAGER_APPLICATION_METRICS_CLIENT_SECRET}
            scope:
              - metrics_server
      resourceserver:
        jwt:
          issuerUri: http://localhost:8082/realms/atum

  datasource:
    url: jdbc:postgresql://localhost:5433/products_catalogue_database
    username: postgres
    password: ${MANAGER_APPLICATION_DB_PASSWORD}

  flyway:
    schemas:
      - user_management

catalogue:
  service:
    base:
      uri: http://localhost:8080
    registration-id: keycloak


management:
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"